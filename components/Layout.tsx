import { ComponentPropsWithoutRef, ReactNode } from 'react';
import type { Metadata } from 'next';
import localFont from 'next/font/local';
import '@/app/globals.css';

const geistSans = localFont({
  src: "../app/fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "../app/fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: 'HAIDI Practical Assessment',
  description: 'Generated by create next app',
};

interface Props {
  children: ReactNode;
  slotProps?: {
    body?: ComponentPropsWithoutRef<'body'>,
    html?: ComponentPropsWithoutRef<'html'>,
  }
}

export async function Layout({ children, slotProps }: Props) {
  return (
    <html lang="en" {...slotProps?.html}>
      <body
        {...slotProps?.body}
        className={[`${geistSans.variable} ${geistMono.variable} antialiased `, slotProps?.body?.className].filter(Boolean).join(' ')}
      >
        {children}
      </body>
    </html>
  );
}
